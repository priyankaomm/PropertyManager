/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo;

import com.Connection.MyConnection;
import demo.CreatingMap;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Platform;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author comp3
 */
public class NewMarker extends javax.swing.JFrame {

    /**
     * Creates new form NewMarker
     */
    public NewMarker() {
        initComponents();
        project_id.setVisible(false);
        builder_id.setVisible(false);
    }
    public NewMarker(double x, double y,String layer) {
        initComponents();
        lang.setEditable(false);
        longti.setEditable(false);
        lang.setText(String.valueOf(x));
        longti.setText(String.valueOf(y));
        name.setText(layer);
        show.setVisible(true);
        save.setVisible(false);
        getProjectName();
        getProjectId();
        //builder_id.setText(""+bid);
    }
    public NewMarker(double x, double y,int bid) {
        initComponents();
        lang.setEditable(false);
        longti.setEditable(false);
        lang.setText(String.valueOf(x));
        longti.setText(String.valueOf(y));
        builder_id.setText(""+bid);
        getProjectList(bid);
        show.setVisible(false);
        save.setVisible(true);
        //name.setText(layer);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        save = new javax.swing.JButton();
        lang = new javax.swing.JTextField();
        longti = new javax.swing.JTextField();
        show = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        builder_id = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        project_list = new javax.swing.JComboBox();
        project_id = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Marker Details");

        jLabel2.setText("Latitude");

        jLabel3.setText("Longtitute");

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        show.setText("Show Map");
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        jLabel4.setText("Survey No");

        name.setEditable(false);
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setText("Project Name");

        project_list.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                project_listActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(save)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                                .addComponent(show))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel5))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(project_list, 0, 144, Short.MAX_VALUE)
                                    .addComponent(lang)
                                    .addComponent(longti)
                                    .addComponent(name))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(project_id, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(builder_id, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(builder_id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(project_list, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(project_id, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(longti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save)
                    .addComponent(show))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        
        if(lang.getText().equals("")|| longti.getText().equals("")|| name.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Please Fill All Details");
        }
        else{
        //double langtitute=Double.parseDouble(lang.getText());
        //double longtitute=Double.parseDouble(longti.getText());
        try {
            Connection con= MyConnection.createConnection();
            PreparedStatement pmt =con.prepareStatement("insert into newcoordinate(langtitute,longtitute,Name,project_id,builder_id)values(?,?,?,?,?)");
            pmt.setString(1,lang.getText());
            pmt.setString(2,longti.getText());
            pmt.setString(3,name.getText());
            pmt.setString(4,project_id.getText());
            pmt.setString(5,builder_id.getText());
            pmt.executeUpdate();
            this.dispose();
            
        } catch (SQLException ex) {
            Logger.getLogger(NewMarker.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewMarker.class.getName()).log(Level.SEVERE, null, ex);
        }this.dispose();
        CreatingMap cm = new CreatingMap(Integer.parseInt(builder_id.getText()));
        //cm.createMarker(langtitute, longtitute);
        cm.setVisible(true);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed
        // TODO add your handling code here:
        int pid=Integer.parseInt(project_id.getText());
        int bid=Integer.parseInt(builder_id.getText());
        this.dispose();
        //new CreatingMap(Integer.parseInt(builder_id.getText())).setVisible(false);
        Frame f[]=Frame.getFrames();
        for(int i=0;i<f.length;i++)
        {
            if(f[i] instanceof JFrame)
            f[i].dispose();
        }
        //System.exit(0);
        createScene(bid);
        openMap(pid);
        
      /*  this.dispose();
        if(lang.getText().equals("")|| longti.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null, "Latitude and Longitude Should not be Empty");
        }
        else{
        //double langtitute=Double.parseDouble(lang.getText());
        //double longtitute=Double.parseDouble(longti.getText());
        try {
            Connection con= MyConnection.createConnection();
            PreparedStatement pmt =con.prepareStatement("Delete from newcoordinate where langtitute =? and longtitute=?");
            pmt.setString(1,lang.getText());
            pmt.setString(2,longti.getText());
            pmt.executeUpdate();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(NewMarker.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(NewMarker.class.getName()).log(Level.SEVERE, null, ex);
        }this.dispose();
        CreatingMap cm = new CreatingMap(Integer.parseInt(builder_id.getText()));
        //cm.createMarker(langtitute, longtitute);
        cm.setVisible(true);
        }*/
    }//GEN-LAST:event_showActionPerformed

    private void project_listActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_project_listActionPerformed
        // TODO add your handling code here:
        getProjectId();
    }//GEN-LAST:event_project_listActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewMarker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewMarker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewMarker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewMarker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewMarker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel builder_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField lang;
    private javax.swing.JTextField longti;
    private javax.swing.JTextField name;
    private javax.swing.JLabel project_id;
    private javax.swing.JComboBox project_list;
    private javax.swing.JButton save;
    private javax.swing.JButton show;
    // End of variables declaration//GEN-END:variables
public void setCoordinate()
{
    
}
public void getProjectList(int bid)
{
    try{
    Connection con=MyConnection.createConnection();
    PreparedStatement psmt=con.prepareStatement("select * from project where builder_id=?");
    psmt.setInt(1, bid);
    ResultSet rs=psmt.executeQuery();
    DefaultComboBoxModel dm=new DefaultComboBoxModel();
    project_list.setModel(dm);
    while(rs.next())
    {
        dm.addElement(rs.getString("project_name"));
    }
    }catch(Exception e)
    {
        
    }
}
public void getProjectName()
{
   // project_list.removeAll();
    try{
    Connection con=MyConnection.createConnection();
    PreparedStatement psmt=con.prepareStatement("select * from project where survey_no=?");
    psmt.setString(1,name.getText() );
    ResultSet rs=psmt.executeQuery();
    DefaultComboBoxModel dm=new DefaultComboBoxModel();
    project_list.setModel(dm);
    while(rs.next())
    {
        dm.addElement(rs.getString("project_name"));
        project_id.setText(rs.getString("Id"));
        builder_id.setText(rs.getString("builder_id"));
    }
    //project_list.setSelectedIndex(0);
    }catch(Exception e)
    {
        e.printStackTrace();
    }
}
public void getProjectId()
{
    try{
    Connection con=MyConnection.createConnection();
    PreparedStatement psmt=con.prepareStatement("select * from project where project_name=? and builder_id=?");
    psmt.setString(1, project_list.getSelectedItem().toString());
    psmt.setInt(2, Integer.parseInt(builder_id.getText()));
    ResultSet rs=psmt.executeQuery();
    //DefaultComboBoxModel dm=new DefaultComboBoxModel();
    //project_list.setModel(dm);
    while(rs.next())
    {
        project_id.setText(rs.getString("Id"));
        name.setText(rs.getString("survey_no"));
    }
    }catch(Exception e)
    {
        
    }
}
private  void openMap(int id)  {
    
        Platform.runLater(new Runnable() {
        @Override
        public void run() {
          //javaFX operations should go here
        
        FXMLDocumentController fc=new FXMLDocumentController();
        
        fc.openProjectMap(id);
      }
   });        
    }
private  void createScene(int id)  {
    
        Platform.runLater(new Runnable() {
        @Override
        public void run() {
          //javaFX operations should go here
        try{
        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("FXMLDocument.fxml"));
                     
                     Parent root1 = (Parent) fxmlLoader.load();
                     Stage stage = new Stage();
                     FXMLDocumentController fc=new FXMLDocumentController();
                     Pane p=fc.loadMain(id);
                     ((Label)root1.lookup("#builder_id")).setText(""+id);
                     ((ScrollPane)root1.lookup("#scroll_pane")).setContent(p);
                     Scene scene = new Scene(root1);
                     stage.initStyle(StageStyle.UNDECORATED);
                     stage.setScene(scene);
                     stage.show();
               
    }catch(Exception e)
    {
        e.printStackTrace();
    }
      }
   });        
    } 
}
